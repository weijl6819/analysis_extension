var __extends=(this&&this.__extends)||(function(){var extendStatics=Object.setPrototypeOf||({__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b})||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p]};return function(d,b){extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}})();var AuthoritiesDownloader=(function(_super){__extends(AuthoritiesDownloader,_super);function AuthoritiesDownloader(Url){var _this=_super.call(this,Url)||this;_this.Url=Url;return _this}AuthoritiesDownloader.prototype.DownloadCallback=function(o){_super.prototype.DownloadCallback.call(this,o);var parsedObjects=null;if(o){settings.ttl=Math.max(parseInt(o.objects.HourlyAirQualityIndex.TimeToLive)+5,1);parsedObjects=this.ParseLocalAuthorities(o.objects.HourlyAirQualityIndex.LocalAuthority||[]);dataDownloader.DownloadCompleted({hasChanged:o.hasChanged,hash:o.hash,objects:parsedObjects,hasData:(parsedObjects.authorities.length>0),settings:settings},this)}else{dataDownloader.DownloadCompleted(null,this)}};AuthoritiesDownloader.prototype.CompareLaName=function(a,b){if(a.LocalAuthorityName==b.LocalAuthorityName)return 0;else if(a.LocalAuthorityName<b.LocalAuthorityName)return-1;else if(a.LocalAuthorityName>b.LocalAuthorityName)return 1};AuthoritiesDownloader.prototype.CompareSiteName=function(a,b){if(a.SiteName==b.SiteName)return 0;else if(a.SiteName<b.SiteName)return-1;else if(a.SiteName>b.SiteName)return 1};AuthoritiesDownloader.prototype.ParseLocalAuthorities=function(json){if(Object.prototype.toString.call(json)!=='[object Array]'){json=[json]}json.sort(this.CompareLaName);var laNodes=json;var overallMaxDate=new Date(2001,1,1);var overallMinDate=new Date(2099,1,1);var overallMaxIndex=0;var hasModerates=false;for(var laIdx=0;laIdx<laNodes.length;laIdx++){var laObj=laNodes[laIdx];laObj.LocalAuthorityName=laObj.LocalAuthorityName.replace(' and ',' & ');laObj.laLogo32='http://www.londonair.org.uk/london/images/la_logos/logo_32_'+laObj.LocalAuthorityCode+'.png';laObj.laLogo128='http://www.londonair.org.uk/london/images/la_logos/logo_128_'+laObj.LocalAuthorityCode+'.png';laObj.LaCentreLatitude=parseFloat(laObj.LaCentreLatitude);laObj.LaCentreLongitude=parseFloat(laObj.LaCentreLongitude);laObj.meanLa=(laObj.LocalAuthorityCode==settings.meanLaId);if(!laObj.Site||laObj.Site==null)laObj.Site=[];if(Object.prototype.toString.call(laObj.Site)!='[object Array]'){laObj.Site=[laObj.Site]}var siteNodes=laObj.Site;laObj.maxIndex=0;laObj.maxIndexSource='';laObj.maxDate=new Date(2001,1,1);laObj.minDate=new Date(2099,1,1);laObj.hasSites=(siteNodes.length>0);for(var siteIdx=0;siteIdx<siteNodes.length;siteIdx++){var siteObj=siteNodes[siteIdx];siteObj.meanSite=(siteObj.SiteType!='All'&&siteObj.SiteType!='LMN');siteObj.Latitude=parseFloat(siteObj.Latitude);siteObj.Longitude=parseFloat(siteObj.Longitude);siteObj.first=(siteIdx==0);siteObj.last=(siteIdx==siteNodes.length-1);if(!siteObj.Species||siteObj.Species==null)siteObj.Species=[];if(Object.prototype.toString.call(siteObj.Species)!='[object Array]'){siteObj.Species=[siteObj.Species]}var speciesNodes=siteObj.Species;siteObj.SiteName=siteObj.SiteName.replace(' and ',' & ').replace(' - ','-');var dashIdx=siteObj.SiteName.indexOf('-');if(dashIdx>=0){siteObj.SiteName=siteObj.SiteName.substring(dashIdx+1)}siteObj.maxIndex=0;siteObj.maxDate=moment(siteObj.BulletinDate,'YYYY-MM-DD HH:mm:ss').toDate();siteObj.minDate=moment(siteObj.BulletinDate,'YYYY-MM-DD HH:mm:ss').toDate();siteObj.maxIndexSource='';siteObj.maxDateFormatted=moment(siteObj.BulletinDate,'YYYY-MM-DD HH:mm:ss').format('DD MMM YYYY @ HH:mm');if(overallMaxDate<siteObj.maxDate)overallMaxDate=siteObj.maxDate;if(overallMinDate>siteObj.minDate)overallMinDate=siteObj.minDate;if(laObj.maxDate<siteObj.maxDate)laObj.maxDate=siteObj.maxDate;if(laObj.minDate>siteObj.minDate)laObj.minDate=siteObj.minDate;for(var speciesIdx=0;speciesIdx<speciesNodes.length;speciesIdx++){var speciesObj=speciesNodes[speciesIdx];speciesObj.AirQualityIndex=parseInt(speciesObj.AirQualityIndex);var indexPrefixSpecies='';if(speciesObj.IndexSource.substring(0,1)=='T'){indexPrefixSpecies=speciesObj.IndexSource.substring(0,1)}speciesObj.IndexPrefix=indexPrefixSpecies;var readingTextLa='Max Reading = '+speciesObj.AirQualityIndex;if(speciesObj.IndexSource=='Trigger'){readingTextLa+=" [Predicted]"}if(speciesObj.AirQualityIndex<=0){readingTextLa="No Data"}speciesObj.ReadingSuffix=readingTextLa;if(laObj.maxIndex<speciesObj.AirQualityIndex){laObj.maxIndex=speciesObj.AirQualityIndex;laObj.maxIndexSource=speciesObj.IndexSource}if(laObj.maxIndex==speciesObj.AirQualityIndex&&laObj.maxIndexSource=="Trigger"&&speciesObj.IndexSource!="Trigger"){laObj.maxIndex=speciesObj.AirQualityIndex;laObj.maxIndexSource=speciesObj.IndexSource}if(siteObj.maxIndex<speciesObj.AirQualityIndex){siteObj.maxIndex=speciesObj.AirQualityIndex;siteObj.maxIndexSource=speciesObj.IndexSource}if(siteObj.maxIndex==speciesObj.AirQualityIndex&&siteObj.maxIndexSource=="Trigger"&&speciesObj.IndexSource!="Trigger"){siteObj.maxIndex=speciesObj.AirQualityIndex;siteObj.maxIndexSource=speciesObj.IndexSource}}var indexPrefixSite='';if(siteObj.maxIndexSource.substring(0,1)=='T'){indexPrefixSite=siteObj.maxIndexSource.substring(0,1)}siteObj.IndexPrefix=indexPrefixSite}if(siteNodes.length>0){siteNodes.sort(this.CompareSiteName)}laObj.getSiteFromSiteCode=function(searchSiteCode){var returnSite=null;for(var ssc=0;ssc<this.Site.length;ssc++){if(this.Site[ssc].SiteCode==searchSiteCode){returnSite=this.Site[ssc];break}}return returnSite}}for(var laIdx=0;laIdx<laNodes.length;laIdx++){if(laNodes[laIdx].Site.length==0){laNodes[laIdx].minDate=null;laNodes[laIdx].maxDate=null;laNodes[laIdx].maxIndex=0;laNodes[laIdx].maxIndexSource=""}else if(laNodes[laIdx].minDate.getTime()!=overallMaxDate.getTime()){var maxLaDate=new Date(2001,1,1);var maxLaIndex=0;var maxLaIndexSource='';for(var siteIdx=0;siteIdx<laNodes[laIdx].Site.length;siteIdx++){var maxSiteIndex=0;var maxSiteIndexSource='';for(var speciesIdx=0;speciesIdx<laNodes[laIdx].Site[siteIdx].Species.length;speciesIdx++){if(maxLaDate<laNodes[laIdx].Site[siteIdx].maxDate)maxLaDate=laNodes[laIdx].Site[siteIdx].maxDate;if(maxLaIndex<laNodes[laIdx].Site[siteIdx].Species[speciesIdx].AirQualityIndex){maxLaIndex=laNodes[laIdx].Site[siteIdx].Species[speciesIdx].AirQualityIndex;maxLaIndexSource=laNodes[laIdx].Site[siteIdx].Species[speciesIdx].IndexSource}if(maxSiteIndex<laNodes[laIdx].Site[siteIdx].Species[speciesIdx].AirQualityIndex){maxSiteIndex=laNodes[laIdx].Site[siteIdx].Species[speciesIdx].AirQualityIndex;maxSiteIndexSource=laNodes[laIdx].Site[siteIdx].Species[speciesIdx].IndexSource}if(maxLaIndex==laNodes[laIdx].Site[siteIdx].Species[speciesIdx].AirQualityIndex&&maxLaIndexSource=="Trigger"&&laNodes[laIdx].Site[siteIdx].Species[speciesIdx].IndexSource!="Trigger"){maxLaIndex=laNodes[laIdx].Site[siteIdx].Species[speciesIdx].AirQualityIndex;maxLaIndexSource=laNodes[laIdx].Site[siteIdx].Species[speciesIdx].IndexSource}if(maxSiteIndex==laNodes[laIdx].Site[siteIdx].Species[speciesIdx].AirQualityIndex&&maxSiteIndexSource=="Trigger"&&laNodes[laIdx].Site[siteIdx].Species[speciesIdx].IndexSource!="Trigger"){maxSiteIndex=laNodes[laIdx].Site[siteIdx].Species[speciesIdx].AirQualityIndex;maxSiteIndexSource=laNodes[laIdx].Site[siteIdx].Species[speciesIdx].IndexSource}}laNodes[laIdx].Site[siteIdx].maxDate=laNodes[laIdx].Site[siteIdx].maxDate;laNodes[laIdx].Site[siteIdx].maxIndex=maxSiteIndex;laNodes[laIdx].Site[siteIdx].maxIndexSource=maxSiteIndexSource;laNodes[laIdx].Site[siteIdx].maxDateFormatted=moment(laNodes[laIdx].Site[siteIdx].maxDate).format('DD MMM YYYY @ HH:mm')}laNodes[laIdx].maxDate=maxLaDate;laNodes[laIdx].maxIndex=maxLaIndex;laNodes[laIdx].maxIndexSource=maxLaIndexSource}if(laNodes[laIdx].Site.length>0){laNodes[laIdx].maxDateFormatted=moment(laNodes[laIdx].maxDate).format('DD MMM YYYY @ HH:mm')}else{laNodes[laIdx].maxDateFormatted=''}var indexPrefix='';if(laNodes[laIdx].maxIndexSource.substring(0,1)=='T'){indexPrefix=laNodes[laIdx].maxIndexSource.substring(0,1)}laNodes[laIdx].IndexPrefix=indexPrefix;var readingTextLa='Max Reading = '+laNodes[laIdx].maxIndex;if(laNodes[laIdx].maxIndexSource=='Trigger'){readingTextLa+=" [Predicted]"}if(laNodes[laIdx].maxIndex<=0){readingTextLa="No Data"}laNodes[laIdx].ReadingSuffix=readingTextLa;laNodes[laIdx].IsModerate=(laNodes[laIdx].maxIndex>=4);if(laNodes[laIdx].IsModerate){hasModerates=true}if(laNodes[laIdx].maxIndex>overallMaxIndex){overallMaxIndex=laNodes[laIdx].maxIndex}}json.sort(this.CompareLaName);return{startAuthorityButtonSet:settings.startAuthorityButtonSet,authorities:json,hideAuthorityButtonSet:settings.hideAuthorityButtonSet,hasModerates:hasModerates,overallMaxDate:moment(overallMaxDate).format('DD MMM YYYY @ HH:mm'),overallMinDate:moment(overallMinDate).format('DD MMM YYYY @ HH:mm'),overallMaxIndex:overallMaxIndex}};return AuthoritiesDownloader}(XmlDownloader))