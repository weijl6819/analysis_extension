{"version":3,"sources":["scripts/background.js"],"names":["dataURLtoBlob","dataurl","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","Blob","type","getTimestamp","date","Date","year","getFullYear","month","getMonth","slice","day","getDate","hour","getHours","minute","getMinutes","timestamp","copyToClipboard","text","input","document","createElement","style","position","opacity","value","body","appendChild","select","execCommand","removeChild","showAlertMessage","delay","insertDivCode","chrome","tabs","query","console","log","i","executeScript","id","code","e","hideAlertMessage","insertCode","startRecord","asksForAuthToken","then","token","driveService","DriveService","getFolderId","folderId","photosFolderId","windows","getCurrent","w","mainWidth","width","mainHeight","height","left","CAMERA_WINDOW_WIDTH","top","CAMERA_WINDOW_HEIGHT","create","url","cw","cameraWindowId","onRemoved","addListener","windowId","err","Promise","resolve","reject","identity","getAuthToken","interactive","getShortUrl","longUrl","metadata","xhr","XMLHttpRequest","open","setRequestHeader","onload","target","status","response","JSON","parse","onerror","send","stringify","uploadImage","blob","content","uploader","MediaUploader","title","mimeType","parents","file","onComplete","data","onError","upload","takePhoto","uploadDataUrl","dataUrl","downloadUrl","viewUrl","shortUrl","runtime","sendMessage","onInstalled","details","previousVersion","options","this","folderName","prototype","_this","self","params","encodeURIComponent","item","items","createFolder","parentId","_this2","RetryHandler","interval","maxInterval","retry","fn","setTimeout","nextInterval_","reset","getRandomInt_","Math","min","max","floor","random","noop","contentType","name","onProgress","offset","chunkSize","retryHandler","uploadType","buildUrl_","fileId","baseUrl","httpMethod","size","location","getResponseHeader","sendFile_","onUploadError_","bind","end","addEventListener","onContentUploadSuccess_","onContentUploadError_","resume_","extractRange_","range","parseInt","pop","buildQuery_","Object","keys","map","key","join"],"mappings":"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","file":"background.js","sourcesContent":["'use strict';\n\n// Converts base64 encoded Data URI into Blob\n\nfunction dataURLtoBlob(dataurl) {\n  var arr = dataurl.split(','),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new Blob([u8arr], { type: mime });\n}\n\n// Returns current data and time in format 2016-11-28_16-24\nfunction getTimestamp() {\n  var date = new Date();\n  var year = date.getFullYear();\n  var month = ('00' + (date.getMonth() + 1)).slice(-2);\n  var day = ('00' + date.getDate()).slice(-2);\n  var hour = ('00' + date.getHours()).slice(-2);\n  var minute = ('00' + date.getMinutes()).slice(-2);\n\n  var timestamp = year + '-' + month + '-' + day + '_' + hour + '-' + minute;\n  return timestamp;\n};\n\n// Copy any text into the Clipboard\nfunction copyToClipboard(text) {\n  var input = document.createElement('input');\n  input.style.position = 'fixed';\n  input.style.opacity = 0;\n  input.value = text;\n  document.body.appendChild(input);\n  input.select();\n  document.execCommand('Copy');\n  document.body.removeChild(input);\n};\n\n// Show message with feedback to user\nfunction showAlertMessage(text, delay) {\n  var insertDivCode = 'showUserMessage(\"' + text + '\", ' + delay + ');';\n\n  chrome.tabs.query({}, function (tabs) {\n    console.log('tabs length:', tabs.length);\n    // Inject into all tabs\n    for (var i = 0; i < tabs.length; i++) {\n      try {\n        chrome.tabs.executeScript(tabs[i].id, {\n          code: insertDivCode\n        });\n      } catch (e) {\n        console.log('cannot access this tab: ', i);\n      }\n    }\n  });\n}\n\nfunction hideAlertMessage() {\n  var insertCode = 'hideUserMessage()';\n\n  chrome.tabs.query({}, function (tabs) {\n    console.log('tabs length:', tabs.length);\n    // Inject into all tabs\n    for (var i = 0; i < tabs.length; i++) {\n      try {\n        chrome.tabs.executeScript(tabs[i].id, {\n          code: insertCode\n        });\n      } catch (e) {\n        console.log('cannot access this tab: ', i);\n      }\n    }\n  });\n}'use strict';\n\nchrome.runtime.onInstalled.addListener(function (details) {\n  console.log('previousVersion', details.previousVersion);\n});\n\nconsole.log('Event Page for Browser Action');\n\nvar photosFolderId;\nvar CAMERA_WINDOW_WIDTH = 480;\nvar CAMERA_WINDOW_HEIGHT = 350;\n\n// State\nvar cameraWindowId;\n\nfunction startRecord() {\n  console.log('open camera window');\n  asksForAuthToken().then(function (token) {\n    console.log('user approved auth token');\n\n    var driveService = new DriveService({\n      token: token\n    });\n    driveService.getFolderId().then(function (folderId) {\n      photosFolderId = folderId;\n      // showAlertMessage('Started', 3);\n      console.log('creating window');\n\n      chrome.windows.getCurrent({}, function (w) {\n        var mainWidth = w.width;\n        var mainHeight = w.height;\n        var left = mainWidth - CAMERA_WINDOW_WIDTH - 24;\n        var top = mainHeight - CAMERA_WINDOW_HEIGHT;\n\n        chrome.windows.create({\n          url: 'camera.html',\n          type: 'popup',\n          width: CAMERA_WINDOW_WIDTH,\n          height: CAMERA_WINDOW_HEIGHT,\n          top: top,\n          left: left\n        }, function (cw) {\n          cameraWindowId = cw.id;\n          chrome.windows.onRemoved.addListener(function (windowId) {\n            if (windowId == cameraWindowId) {\n              console.log('window closed');\n            }\n          });\n        });\n      });\n    }).catch(function (err) {\n      console.log(err);\n      // TODO\n    });\n  }).catch(function (err) {\n    console.log('user did not approve auth token');\n    // TODO show message that you should approve access\n  });\n}\n\n// Get Auth token from cache or start OAuth Google dialog\nfunction asksForAuthToken() {\n  console.log('get auth token interactively');\n\n  return new Promise(function (resolve, reject) {\n    chrome.identity.getAuthToken({ 'interactive': true }, function (token) {\n      if (token) {\n        resolve(token);\n      } else {\n        reject();\n      }\n    });\n  });\n}\n\n// Get short URL via Google URL Shortener\nfunction getShortUrl(token, longUrl) {\n  console.log('URL Shortener: get short url');\n\n  return new Promise(function (resolve, reject) {\n    var metadata = {\n      'longUrl': longUrl\n    };\n\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', 'https://www.googleapis.com/urlshortener/v1/url', true);\n    xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.onload = function (e) {\n      if (e.target.status == 200 || e.target.status == 201) {\n        // TODO onComplete\n        console.log('URL Shortener: success');\n        var response = JSON.parse(e.target.response);\n        var url = response.id;\n        resolve(url);\n      } else {\n        // TODO onError\n        console.log('URL Shortener: error');\n        console.log(e.target.response);\n        reject();\n      }\n    };\n    xhr.onerror = function (e) {\n      // TODO onError\n      console.log('URL Shortener: error');\n      console.log(e.target.response);\n      reject();\n    };\n    xhr.send(JSON.stringify(metadata));\n  });\n}\n\n// Upload image into Google Drive\nfunction uploadImage(token, folderId, blob) {\n  console.log('upload image');\n\n  return new Promise(function (resolve, reject) {\n    // Content is a Blob\n    var content = blob;\n\n    // https://github.com/googledrive/cors-upload-sample\n    var uploader = new MediaUploader({\n      metadata: {\n        title: 'Webcam_Snapshot_' + getTimestamp(),\n        mimeType: content.type,\n        parents: [{\n          id: folderId\n        }]\n      },\n      file: content,\n      token: token,\n      onComplete: function onComplete(data) {\n        console.log('Drive: upload successfull');\n        var response = JSON.parse(data);\n        resolve(response);\n      },\n      onError: function onError(data) {\n        // TODO onError\n        console.log('Drive: upload error');\n        console.log(data);\n        reject();\n      }\n    });\n    uploader.upload();\n  });\n}\n\nfunction takePhoto() {\n  console.log('photo clicked');\n\n  // Convert the visible area of the current tab to a base64 URI\n  // chrome.tabs.captureVisibleTab( (screenshotUrl) => {\n  //   uploadDataUrl(screenshotUrl);\n  // });\n  // TODO\n}\n\n// Upload into user's Google Drive\nfunction uploadDataUrl(dataUrl) {\n  console.log('upload data url: ' + dataUrl.length + ' chars');\n\n  var blob = dataURLtoBlob(dataUrl);\n\n  chrome.identity.getAuthToken({ 'interactive': false }, function (token) {\n    if (token) {\n      console.log('upload data with google auth token');\n\n      uploadImage(token, photosFolderId, blob).then(function (response) {\n        var downloadUrl = response.downloadUrl;\n        console.log(response);\n        // doesn't open with other account even with \"Anyone with the link can view\".\n        // var viewUrl = downloadUrl.replace(/\\=download.*/, '=view');\n        var viewUrl = 'https://drive.google.com/uc?export=view&id=' + response.id;\n        console.log('view url:', viewUrl);\n\n        // Google URL Shortener\n        getShortUrl(token, viewUrl).then(function (shortUrl) {\n          console.log('short url: ', shortUrl);\n          copyToClipboard(shortUrl);\n          hideAlertMessage();\n          showAlertMessage('URL to the Snapshot has been put in your clipboard', 3);\n\n          // Close Camera Window\n          chrome.runtime.sendMessage({ id: 'close-camera-window' });\n        }).catch(function (err) {\n          console.log('URL Shortener: error');\n        });\n      }).catch(function (err) {\n        console.log(err);\n        // TODO\n      });\n    } else {\n      console.log('can not get Google auth token');\n      // TODO\n      // stop timer\n      // show message that no valid token, please start and authenticate\n    }\n  });\n}'use strict';\n\n/**\n * Helper class for upload into Google Slides using XHR/CORS.\n */\nvar DriveService = function DriveService(options) {\n  this.token = options.token;\n  this.folderName = 'Webcam Snapshot';\n  this.metadata = options.metadata || {};\n};\n\n/**\n * Get id of existing folder or create new folder.\n */\nDriveService.prototype.getFolderId = function () {\n  var _this = this;\n\n  console.log('drive: get folder id');\n\n  return new Promise(function (resolve, reject) {\n    var self = _this;\n\n    // Non trashed folder with desired title\n    var params = 'trashed = false and mimeType = \\'application/vnd.google-apps.folder\\' and title = \\'' + _this.folderName + '\\'';\n    params = encodeURIComponent(params);\n\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', 'https://www.googleapis.com/drive/v2/files?q=' + params, true);\n    xhr.setRequestHeader('Authorization', 'Bearer ' + _this.token);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.onload = function (e) {\n      if (e.target.status == 200 || e.target.status == 201) {\n        // TODO onComplete\n        var response = JSON.parse(e.target.response);\n        var item = response.items[0];\n        if (item) {\n          // Folder already exists.\n          console.log('Drive: foldel exists');\n          var folderId = item.id;\n          resolve(folderId);\n        } else {\n          // Folder doesn't exist yet. Let's create it.\n          console.log('Drive: folder doesnt exist yet');\n          self.createFolder(self.folderName).then(function (folderId) {\n            resolve(folderId);\n          }).catch(function (err) {\n            reject(err);\n          });\n          // TODO onError\n        }\n      } else {\n        // TODO onError\n        console.log('Drive: get folder error');\n        reject(e.target.response);\n      }\n    };\n    xhr.onerror = function (e) {\n      // TODO onError\n      console.log('Drive: get folder error');\n      reject(e.target.response);\n    };\n    xhr.send(null);\n  });\n};\n\n/**\n * Create new folder in Google Drive.\n */\nDriveService.prototype.createFolder = function (folderName, parentId) {\n  var _this2 = this;\n\n  console.log('Drive: create folder');\n\n  return new Promise(function (resolve, reject) {\n    var metadata = {\n      title: folderName,\n      mimeType: 'application/vnd.google-apps.folder'\n    };\n    if (parentId) {\n      metadata.parents = [{\n        id: parentId\n      }];\n    }\n\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', 'https://www.googleapis.com/drive/v2/files', true);\n    xhr.setRequestHeader('Authorization', 'Bearer ' + _this2.token);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.onload = function (e) {\n      if (e.target.status == 200 || e.target.status == 201) {\n        // TODO onComplete\n        console.log('Drive: folder created');\n        var response = JSON.parse(e.target.response);\n        var folderId = response.id;\n        resolve(folderId);\n      } else {\n        // TODO onError\n        console.log('Drive: create folder error');\n        reject(e.target.response);\n      }\n    };\n    xhr.onerror = function (e) {\n      // TODO onError\n      console.log('Drive: create folder error');\n      reject(e.target.response);\n    };\n    xhr.send(JSON.stringify(metadata));\n  });\n};'use strict';\n\n/**\n * Helper for implementing retries with backoff. Initial retry\n * delay is 1 second, increasing by 2x (+jitter) for subsequent retries\n *\n * @constructor\n */\nvar RetryHandler = function RetryHandler() {\n  this.interval = 1000; // Start at one second\n  this.maxInterval = 60 * 1000; // Don't wait longer than a minute \n};\n\n/**\n * Invoke the function after waiting\n *\n * @param {function} fn Function to invoke\n */\nRetryHandler.prototype.retry = function (fn) {\n  setTimeout(fn, this.interval);\n  this.interval = this.nextInterval_();\n};\n\n/**\n * Reset the counter (e.g. after successful request.)\n */\nRetryHandler.prototype.reset = function () {\n  this.interval = 1000;\n};\n\n/**\n * Calculate the next wait time.\n * @return {number} Next wait interval, in milliseconds\n *\n * @private\n */\nRetryHandler.prototype.nextInterval_ = function () {\n  var interval = this.interval * 2 + this.getRandomInt_(0, 1000);\n  return Math.min(interval, this.maxInterval);\n};\n\n/**\n * Get a random int in the range of min to max. Used to add jitter to wait times.\n *\n * @param {number} min Lower bounds\n * @param {number} max Upper bounds\n * @private\n */\nRetryHandler.prototype.getRandomInt_ = function (min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\n/**\n * Helper class for resumable uploads using XHR/CORS. Can upload any Blob-like item, whether\n * files or in-memory constructs.\n *\n * @example\n * var content = new Blob([\"Hello world\"], {\"type\": \"text/plain\"});\n * var uploader = new MediaUploader({\n *   file: content,\n *   token: accessToken,\n *   onComplete: function(data) { ... }\n *   onError: function(data) { ... }\n * });\n * uploader.upload();\n *\n * @constructor\n * @param {object} options Hash of options\n * @param {string} options.token Access token\n * @param {blob} options.file Blob-like item to upload\n * @param {string} [options.fileId] ID of file if replacing\n * @param {object} [options.params] Additional query parameters\n * @param {string} [options.contentType] Content-type, if overriding the type of the blob.\n * @param {object} [options.metadata] File metadata\n * @param {function} [options.onComplete] Callback for when upload is complete\n * @param {function} [options.onProgress] Callback for status for the in-progress upload\n * @param {function} [options.onError] Callback if upload fails\n */\nvar MediaUploader = function MediaUploader(options) {\n  var noop = function noop() {};\n  this.file = options.file;\n  this.contentType = options.contentType || this.file.type || 'application/octet-stream';\n  this.metadata = options.metadata || {\n    'title': this.file.name,\n    'mimeType': this.contentType\n  };\n  this.token = options.token;\n  this.onComplete = options.onComplete || noop;\n  this.onProgress = options.onProgress || noop;\n  this.onError = options.onError || noop;\n  this.offset = options.offset || 0;\n  this.chunkSize = options.chunkSize || 0;\n  this.retryHandler = new RetryHandler();\n\n  this.url = options.url;\n  if (!this.url) {\n    var params = options.params || {};\n    params.uploadType = 'resumable';\n    this.url = this.buildUrl_(options.fileId, params, options.baseUrl);\n  }\n  this.httpMethod = options.fileId ? 'PUT' : 'POST';\n};\n\n/**\n * Initiate the upload.\n */\nMediaUploader.prototype.upload = function () {\n  var self = this;\n  var xhr = new XMLHttpRequest();\n\n  xhr.open(this.httpMethod, this.url, true);\n  xhr.setRequestHeader('Authorization', 'Bearer ' + this.token);\n  xhr.setRequestHeader('Content-Type', 'application/json');\n  xhr.setRequestHeader('X-Upload-Content-Length', this.file.size);\n  xhr.setRequestHeader('X-Upload-Content-Type', this.contentType);\n\n  xhr.onload = function (e) {\n    if (e.target.status < 400) {\n      var location = e.target.getResponseHeader('Location');\n      this.url = location;\n      this.sendFile_();\n    } else {\n      this.onUploadError_(e);\n    }\n  }.bind(this);\n  xhr.onerror = this.onUploadError_.bind(this);\n  xhr.send(JSON.stringify(this.metadata));\n};\n\n/**\n * Send the actual file content.\n *\n * @private\n */\nMediaUploader.prototype.sendFile_ = function () {\n  var content = this.file;\n  var end = this.file.size;\n\n  if (this.offset || this.chunkSize) {\n    // Only bother to slice the file if we're either resuming or uploading in chunks\n    if (this.chunkSize) {\n      end = Math.min(this.offset + this.chunkSize, this.file.size);\n    }\n    content = content.slice(this.offset, end);\n  }\n\n  var xhr = new XMLHttpRequest();\n  xhr.open('PUT', this.url, true);\n  xhr.setRequestHeader('Content-Type', this.contentType);\n  xhr.setRequestHeader('Content-Range', 'bytes ' + this.offset + '-' + (end - 1) + '/' + this.file.size);\n  xhr.setRequestHeader('X-Upload-Content-Type', this.file.type);\n  if (xhr.upload) {\n    xhr.upload.addEventListener('progress', this.onProgress);\n  }\n  xhr.onload = this.onContentUploadSuccess_.bind(this);\n  xhr.onerror = this.onContentUploadError_.bind(this);\n  xhr.send(content);\n};\n\n/**\n * Query for the state of the file for resumption.\n *\n * @private\n */\nMediaUploader.prototype.resume_ = function () {\n  var xhr = new XMLHttpRequest();\n  xhr.open('PUT', this.url, true);\n  xhr.setRequestHeader('Content-Range', 'bytes */' + this.file.size);\n  xhr.setRequestHeader('X-Upload-Content-Type', this.file.type);\n  if (xhr.upload) {\n    xhr.upload.addEventListener('progress', this.onProgress);\n  }\n  xhr.onload = this.onContentUploadSuccess_.bind(this);\n  xhr.onerror = this.onContentUploadError_.bind(this);\n  xhr.send();\n};\n\n/**\n * Extract the last saved range if available in the request.\n *\n * @param {XMLHttpRequest} xhr Request object\n */\nMediaUploader.prototype.extractRange_ = function (xhr) {\n  var range = xhr.getResponseHeader('Range');\n  if (range) {\n    this.offset = parseInt(range.match(/\\d+/g).pop(), 10) + 1;\n  }\n};\n\n/**\n * Handle successful responses for uploads. Depending on the context,\n * may continue with uploading the next chunk of the file or, if complete,\n * invokes the caller's callback.\n *\n * @private\n * @param {object} e XHR event\n */\nMediaUploader.prototype.onContentUploadSuccess_ = function (e) {\n  if (e.target.status == 200 || e.target.status == 201) {\n    this.onComplete(e.target.response);\n  } else if (e.target.status == 308) {\n    this.extractRange_(e.target);\n    this.retryHandler.reset();\n    this.sendFile_();\n  } else {\n    this.onContentUploadError_(e);\n  }\n};\n\n/**\n * Handles errors for uploads. Either retries or aborts depending\n * on the error.\n *\n * @private\n * @param {object} e XHR event\n */\nMediaUploader.prototype.onContentUploadError_ = function (e) {\n  if (e.target.status && e.target.status < 500) {\n    this.onError(e.target.response);\n  } else {\n    this.retryHandler.retry(this.resume_.bind(this));\n  }\n};\n\n/**\n * Handles errors for the initial request.\n *\n * @private\n * @param {object} e XHR event\n */\nMediaUploader.prototype.onUploadError_ = function (e) {\n  this.onError(e.target.response); // TODO - Retries for initial upload\n};\n\n/**\n * Construct a query string from a hash/object\n *\n * @private\n * @param {object} [params] Key/value pairs for query string\n * @return {string} query string\n */\nMediaUploader.prototype.buildQuery_ = function (params) {\n  params = params || {};\n  return Object.keys(params).map(function (key) {\n    return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n  }).join('&');\n};\n\n/**\n * Build the drive upload URL\n *\n * @private\n * @param {string} [id] File ID if replacing\n * @param {object} [params] Query parameters\n * @return {string} URL\n */\nMediaUploader.prototype.buildUrl_ = function (id, params, baseUrl) {\n  var url = baseUrl || 'https://www.googleapis.com/upload/drive/v2/files/';\n  if (id) {\n    url += id;\n  }\n  var query = this.buildQuery_(params);\n  if (query) {\n    url += '?' + query;\n  }\n  return url;\n};"]}